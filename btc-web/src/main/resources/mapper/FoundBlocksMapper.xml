<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.btc.app.mapper.FoundBlocksMapper">

	<!-- 通用查询映射结果 -->
	<resultMap id="BaseResultMap" type="com.btc.app.entity.FoundBlocks">
		<id column="id" property="id" />
		<result column="puid" property="puid" />
		<result column="worker_id" property="workerId" />
		<result column="worker_full_name" property="workerFullName" />
		<result column="job_id" property="jobId" />
		<result column="height" property="height" />
		<result column="is_orphaned" property="isOrphaned" />
		<result column="hash" property="hash" />
		<result column="rewards" property="rewards" />
		<result column="size" property="size" />
		<result column="prev_hash" property="prevHash" />
		<result column="bits" property="bits" />
		<result column="version" property="version" />
		<result column="created_at" property="createdAt" />
	</resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, puid, worker_id AS workerId, worker_full_name AS workerFullName, job_id AS jobId, height, is_orphaned AS isOrphaned, hash, rewards, size, prev_hash AS prevHash, bits, version, created_at AS createdAt
    </sql>

	<select id="selectAll" resultMap="BaseResultMap">
		SELECT 
			id, puid, worker_id, worker_full_name, job_id, height, is_orphaned, hash, rewards, size, prev_hash, bits, version, created_at
		FROM 
			found_blocks
	</select>
	
	<insert id="insert" parameterType="com.btc.app.entity.FoundBlocks">
		INSERT INTO found_blocks 
			(id, puid, worker_id, worker_full_name, job_id, height, is_orphaned, hash, rewards, size, prev_hash, bits, version, created_at) 
		VALUES
			(#{id}, #{puid}, #{workerId}, #{workerFullName}, #{jobId}, #{height}, #{isOrphaned}, #{hash}, #{rewards}, #{size}, #{prevHash}, #{bits}, #{version}, #{createdAt})
	</insert>
	
	<insert id="inserts" parameterType="java.util.List">
		INSERT INTO found_blocks 
			(id, puid, worker_id, worker_full_name, job_id, height, is_orphaned, hash, rewards, size, prev_hash, bits, version, created_at) 
		VALUES
		<foreach collection="list" item="item" separator=",">  
            (#{item.id}, #{item.puid}, #{item.workerId}, #{item.workerFullName}, #{item.jobId}, #{item.height}, #{item.isOrphaned}, #{item.hash}, #{item.rewards}, #{item.size}, #{item.prevHash}, #{item.bits}, #{item.version}, #{item.createdAt})
        </foreach>  
	</insert>
	
	<update id="update" parameterType="com.btc.app.entity.FoundBlocks">
		UPDATE found_blocks 
		  <trim prefix="set" suffixOverrides=",">
		  <if test="puid != null" >
		    puid=#{puid},
		  </if>
		  <if test="workerId != null" >
		    worker_id=#{workerId},
		  </if>
		  <if test="workerFullName != null" >
		    worker_full_name=#{workerFullName},
		  </if>
		  <if test="jobId != null" >
		    job_id=#{jobId},
		  </if>
		  <if test="height != null" >
		    height=#{height},
		  </if>
		  <if test="isOrphaned != null" >
		    is_orphaned=#{isOrphaned},
		  </if>
		  <if test="hash != null" >
		    hash=#{hash},
		  </if>
		  <if test="rewards != null" >
		    rewards=#{rewards},
		  </if>
		  <if test="size != null" >
		    size=#{size},
		  </if>
		  <if test="prevHash != null" >
		    prev_hash=#{prevHash},
		  </if>
		  <if test="bits != null" >
		    bits=#{bits},
		  </if>
		  <if test="version != null" >
		    version=#{version},
		  </if>
		  <if test="createdAt != null" >
		    created_at=#{createdAt},
		  </if>
		</trim>
		 WHERE id = #{id}
	</update>
	

	<delete id="delete">
		DELETE FROM found_blocks  WHERE id = #{id}
	</delete>
	
	<select id="findByPrimaryKey" resultType="com.btc.app.entity.FoundBlocks">
		SELECT 
			<include refid="Base_Column_List"></include>
		FROM 
			found_blocks
		WHERE
			id = #{id}
	</select>
	
	
</mapper>
